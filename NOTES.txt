Wikipedia Install - 8/18/2012
(Don't follow these - See newer instructions from January '13 below)

Wikipedia instructions from:
http://www.igeek.co.za/2009/10/16/how-to-mirror-wikipedia/

apt-get install apache2 php5 libapache2-mod-php5 mysql-server mysql-client php5-mysql phpmyadmin

Had to recover my mysql root password.

Moved /var/lib/mysql to /mnt/data2/mysql
Had to inform AppArmor of the new path.

cat >>/etc/apparmor.d/local/usr.sbin.mysqld  <<EOF
/mnt/data2/mysql rwk,
/mnt/data2/mysql/** rwk,
EOF


Used phpmyadmin to create 'wikidb'.
Do not create 'wikiuser', allow the mediawiki setup page to do so.

# mediawiki from the repo is probably out of date (<ref> issues in wikipedia import).
# Try the current tarball in future.
apt-get install mediawiki

Downloaded (cut and paste of code) mwimport script from:
http://meta.wikimedia.org/wiki/Data_dumps/mwimport

Had to modify mwimport script to support schema 0.7 (only supported 0.6)
(see mwimport.diff)

bzcat enwiki-20120802-pages-articles-multistream.xml.bz2 | ./mwimport | mysql -f -u wikiuser -p wikidb

----
Ubuntu repository mirror - 8/21/12

apt-get install apt-mirror
apt-mirror mirror.list
(will mirror into /public2/knowledge/ubuntu/12.04)

----
rsync to GoFlex Home - 8/21/12

cd /public2/
rsync -avrP knowledge/ knowledge:/mnt/data/knowledge

----
OpenStreetMap - 8/23/12

# Download planet data file (20GB as of Jan 2013)
wget http://ftp.osuosl.org/pub/openstreetmap/pbf/planet-latest.osm.pbf

apt-get install python-software-properties
apt-get autoremove
add-apt-repository ppa:kakrueger/openstreetmap
apt-get update
apt-get install libapache2-mod-tile

# Be sure to get osm2pgsql version 0.80.0 or higher from the correct repo!
# The one in the main repo is old!
wget http://ppa.launchpad.net/kakrueger/openstreetmap/ubuntu/pool/main/o/osm2pgsql/osm2pgsql_0.80.0-12~precise1_amd64.deb
apt-get install libprotobuf
dpkg -i osm2pgsql*.deb

# osm2pgsql -v
osm2pgsql SVN version 0.80.0 (32bit id space)

osm2pgsql -C 8000 maryland.osm.bz2 

vim /var/www/osm/slippymap.html
remove http://localhost and change line to:
var newLayer = new OpenLayers.Layer.OSM("Local Tiles", "/osm/${z}/${x}/${y}.png", {numZoomLevels: 19});

http://orlop/osm/slippymap.html
(must click "Local Tiles" on web page - the Mapnik option renders off the
internet)

----
Gutenberg download command:

while (true); do (date; . ../../NOTES.txt; sleep 3600) | tee -a 20120823.log; done

----
GoFlex Satellite Arch chroot - 8/24/2012

Power on, associate with wifi, go to any web page, click "connect to internet",
configure for local wifi.

telnet goflexsatellite
user: root
pw: goflex

Followed TouchPad chroot instructions at:
http://archlinuxarm.org/forum/viewtopic.php?t=1361

The TouchPad image worked, but was outdated
    # Note: I used the Touchpad chroot image - lucky first pick
    wget http://us.mirror.archlinuxarm.org/os/touchpad/ArchLinuxARM-2011.08-armv7h-chroot.tar.gz

Instead, use the latest:
ArchLinuxARM-armv5te-latest.tar.gz

    cd /media/sda1
    mkdir arch
    dd if=/dev/zero of=alarm.img seek=749999999 bs=1 count=1 #750MB image file
    mke2fs -F alarm.img
    losetup /dev/loop1 alarm.img
    mount -t ext2 /dev/loop1 arch/
    cd arch

    wget http://us.mirror.archlinuxarm.org/os/ArchLinuxARM-armv5te-latest.tar.gz

    tar xzf ArchLinuxARM-*.tar.gz
    mount -o bind /dev/ /media/sda1/arch/dev
    chroot . /bin/bash
    echo "nameserver 8.8.8.8" > /etc/resolv.conf
    mount -t proc proc /proc
    mount -t sysfs sysfs /sys
    pacman -Syu # upgrades...


----
Swapfile - 8/24/2012

To create a swap file follow:
http://www.linux.com/news/software/applications/8208-all-about-linux-swap-space

----
Cross-compilation on ARM using distcc - 8/26/12

On slave:
apt-get install distcc
download Arch ARM cross compiler binary tar.xz
cd expire
xzcat | tar xvf -
chmod a+x /home/braddock
chmod a+x /home/braddock/expire

Edit /etc/init.d/distcc
Add line:
PATH=/home/braddock/expire/x-tools/arm-unknown-linux-gnueabi/bin:$PATH

This daemon will log to /var/log/distccd.log


On master (the ARM device):
packman -Sy distcc
Edit /etc/distcc/hosts
remove 'localhost', add 'orlop'

Not sure this is necessary if you edit /etc/distcc/hosts
export DISTCC_HOSTS='orlop'
If you want verbose DISTCC output:
export DISTCC_VERBOSE=1

If you want DISTCC output to a file instead of stderr
export DISTCC_LOG="distcc.log"

make -j8 CC=distcc

----
time (osm2pgsql --slim -C 14000 planet-120704.osm.pbf)
wget -A '*nshowcat*' -A '*btdownload*' -A '*nshowmovie.html*' -r http://publicdomaintorrents.info 

----
OSM Planet Import
time osm2pgsql --slim -C 14000 planet-120704.osm.pbf


[...]
Copying planet_osm_line to cluster by geometry finished
Creating indexes on  planet_osm_line finished
All indexes on  planet_osm_line created  in 208317s
Completed planet_osm_line
Copying planet_osm_polygon to cluster by geometry finished
Creating indexes on  planet_osm_polygon finished
All indexes on  planet_osm_polygon created  in 263905s
Completed planet_osm_polygon

Stopped table: planet_osm_ways in 843061s

Osm2pgsql took 1600854s overall

real    26680m54.194s
user    309m10.935s
sys     52m56.523s

-----
time render_list -a -z 0 -Z 6 -n 8 -l 15 -s /var/run/renderd/renderd.sock

./render_list -z 0 -Z 13 -a -n 4 -l 15 -s /var/run/renderd/renderd.sock

Total for all tiles rendered
Meta tiles rendered: Rendered 88 tiles in 10608.57 seconds (0.01 tiles/s)
Total tiles rendered: Rendered 5632 tiles in 10608.57 seconds (0.53 tiles/s)
Total tiles handled: Rendered 88 tiles in 10608.57 seconds (0.01 tiles/s)

real    176m48.617s


To render more detail around cities:
time scripts/render_cities.py 15 8 >../processed/cities_tiles.txt
./render_list -n 4 -l 15 -s /var/run/renderd/renderd.sock </knowledge/processed/cities_tiles.txt

----
python lxml

et2 = etree.parse("/home/braddock/tmp/sample.xml")
et2.findall(".//{%s}goof" % "mynamespace")

or

goof=et2.findall(".//my:goof",namespaces = goof[0].nsmap)

----
1/9/2013 - Arch Linux chroot install

General instructions from:
https://wiki.archlinux.org/index.php/Install_from_Existing_Linux


cd /mnt/data2/tmp
wget http://tokland.googlecode.com/svn/trunk/archlinux/arch-bootstrap.sh
chmod a+x arch-bootstrap.sh
sudo ./arch-bootstrap.sh -a x86_64 chroot


cat <<EOF >arch-chroot.sh
mount -t proc none /mnt/data2/tmp/chroot/proc
mount -t sysfs none /mnt/data2/tmp/chroot/sys
mount -o bind /dev /mnt//data2/tmp/chroot/dev
mount -o bind /dev/pts /mnt/data2/tmp/chroot/dev/pts # important for pacman (for signature check)
EOF
chmod a+x arch-chroot.sh

cat <<EOF >arch-umount.sh
umount /mnt/data2/tmp/chroot/proc
umount /mnt/data2/tmp/chroot/sys
umount /mnt/data2/tmp/chroot/dev
umount /mnt/data2/tmp/chroot/dev/pts
EOF
chmod a+x arch-umount.sh


# Enter our chroot
sudo ./arch-chroot.sh
sudo chroot chroot


# Must initialize pacman
pacman-key --init  # takes several minutes
pacman-key --populate archlinux

pacman -S base base-devel

apt-get install locales
# Install useful things
pacman -S vim python2 git rsync sudo screen links nano mtr python2-pip 
pacman -S mediawiki texvc mysql postgresql postgis phpmyadmin php php-apache
pip2 install flask
 
pacman -S apache
vim /etc/httpd/apache.conf
(change port number if necessary)

PROBLEM: systemd will not run in chroot (why??)

Arch is a waste of time!

----
1/10/2013 - Debian Linux chroot install

debootstrap stable ./chroot http://ftp.us.debian.org/debian

see Heritage/scripts/deb-chroot.sh
and Heritage/scripts/deb-umount.sh

apt-get update
apt-get upgrade
apt-get install vim python git rsync sudo screen links \
    nano mtr python-pip ipython telnet locales
dpkg-reconfigure locales

----
1/10/2013 - Wikipedia mirror (redux)

Wikipedia Dump Downloader:
https://github.com/babilen/wp-download/
pip install wp-download

Reference (not exactly what I'm doing):
http://www.extremetech.com/computing/114387-how-to-set-up-your-own-copy-of-wikipedia/2


apt-get install wikimedia mysql-server phpmyadmin bzip2


Set root mysql password (if you didn't during install):
mysqladmin -u root password whatever

Create database:
mysql -u root -p
CREATE DATABASE enwiki;


echo "Include /etc/phpmyadmin/apache.conf" >>/etc/apache2/apache2.conf

http://localhost/phpmyadmin

Priviledges -> Create New User
Username: wikimirror
Grant full access to wikien database
(or:
CREATE USER 'wikimirror'@'localhost IDENTIFIED BY 'whatever
GRANT USAGE ON * . * TO 'wikimirror'@'localhost IDENTIFIED BY 'whatever' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;
GRANT ALL PRIVILEGES ON `enwiki` . * TO 'wikimirror'@'localhost' WITH GRANT OPTION ;
)

Although we installed wikimedia via apt-get, we only did that to get all
dependencies.

wget http://download.wikimedia.org/mediawiki/1.20/mediawiki-1.20.2.tar.gz
cd /var/www
tar xvzf mediawiki-1.20.2.tar.gz 
mv mediawiki-1.20.2/ enwiki

http://localhost/enwiki

Set up the wiki -> Continue
Database name: enwiki
Database username: wikimirror
Database password: whatever
Storage Engine: InnoDB (?)
Database character set: Binary(?)
Name of wiki: wikien
Project Namespace: same as wiki name (?)
Administrator Account:
    Your name: wikimirror
    Password: whatever
"I'm bored already, just install the Wiki"
...
Download LocalSettings.php
Copy to /var/www/enwiki/

OR:
cd /var/www/enwiki
php maintenance/install.php --wiki swwiki --dbuser wikimirror --dbpass whatever --dbname swwiki --lang sw --pass whatever --scriptpath /swwiki swwiki wikimirror 

Use mwdumper to import data

For swwiki, I had to solve a duplicate name_title error with:
mysql -u wikimirror -p swwiki;
delete from page;
delete from text;

echo "deb http://ftp.us.debian.org/debian stable non-free" >>/etc/apt/sources.lib
apt-get install sun-java6-jre libcommons-compress-java

NOTE: there is an issue with the BZip2 Compressor class not found unless you
      invoke mwdumper as follows (note: commons-compress-1.2.jar on Ubuntu 12.04):
java -classpath /usr/share/java/commons-compress-1.0.jar:/knowledge/packages/mwdumper-1.16.jar org.mediawiki.dumper.Dumper

(NOTE: change eswiki to enwiki etc)
time (java -cp /usr/share/java/commons-compress-1.0.jar:/knowledge/packages/mwdumper-1.16.jar org.mediawiki.dumper.Dumper /knowledge/data/wikipedia/eswiki-20121227-pages-articles.xml.bz2 --format=sql:1.5 | mysql -u wikimirror -p eswiki)


BEGIN FAILURE
(Note: mwimport attempt failed.  Use mwdumper which is supported)
(From september: should probably use updated mwimport and updated wikipedia dump)

Downloaded (cut and paste of code) mwimport script from:
http://meta.wikimedia.org/wiki/Data_dumps/mwimport

Had to modify mwimport script to support schema 0.7 (only supported 0.6)
(see mwimport.diff)

bzcat enwiki-20120802-pages-articles-multistream.xml.bz2 | ./mwimport | mysql -f -u wikimirror -p wikien
END FAILURE

----
1/10/2013 - OpenStreetMap mod_tile (without Mapnik) in chroot debian

In general, follow instructions at:
http://wiki.openstreetmap.org/wiki/Mod_tile

apt-get install subversion build-essentials automake libtool \
    libboost-dev libicu-dev apache2-threaded-dev

svn co http://svn.openstreetmap.org/applications/utils/mod_tile/

cd mod_tile
./autogen.sh
LDFLAGS="-lapr-1" CFLAGS="-I/usr/include/apr-1.0 -I/usr/include/apache2" CXXFLAGS=-I/usr/include/apache2/ ./configure --with-libmapnik=no
make mod_tile.o
make install-mod_tile
ldconfig


For configuration information see:
http://wiki.openstreetmap.org/wiki/HowTo_mod_tile


echo "LoadModule tile_module /usr/lib/apache2/modules/mod_tile.so" >/etc/apache2/conf.d/mod_tile

Add to /etc/apache2/sites-enables/000-default:

LoadTileConfigFile /etc/renderd.conf
ModTileRenderdSocketName /tmp/osm-renderd
# Timeout before giving up for a tile to be rendered
ModTileRequestTimeout 3
# Timeout before giving up for a tile to be rendered that is otherwise missing
ModTileMissingRequestTimeout 30

touch /etc/renderd.conf
mkdir /var/lib/mod_tile
Copy tiles into /var/lib/mod_tile/default

Alternatively, to mount the main installation's mod_tile directory into the chroot:
(from outside of chroot)
mount -o bind /mnt/data2/tmp/mod_tile/ /mnt/ssd/expire/stable-chroot/var/lib/mod_tile/

Copy slippymap.html /var/www/osm/

/etc/init.d/apache restart

----
1/15/13 - SSD Errors:

[74138.505236] end_request: I/O error, dev sde, sector 310616
[74475.461906] sd 4:0:1:0: [sde] Unhandled error code
[74475.461911] sd 4:0:1:0: [sde]  Result: hostbyte=DID_BAD_TARGET driverbyte=DRIVER_OK

----
1/19/13 - NFS Setup

Setup a second computer to render tiles.

On orlop server:
apt-get install rpcbind nfs-kernel-server
echo 'NEED_IDMAPD=yes' >>/etc/default/nfs-common
mkdir -p /export/mod_tile
cat >>/etc/exports <<EOF
/export		192.168.1.0/24(rw,insecure,no_subtree_check,async)
/export/mod_tile       192.168.1.0/24(rw,insecure,no_subtree_check,async)
EOF
/etc/init.d/nfs-kernel-server restart
# mount -o bind /mnt/data2/tmp/mod_tile /export/mod_tile
echo "/mnt/data2/tmp/mod_tile	/export/mod_tile	none	bind	0	0" >>/etc/fstab
mount -a


On zhen client:

sudo apt-get install rpcbind nfs-common
echo 'NEED_IDMAPD=yes' >>/etc/default/nfs-common
mkdir /mnt/mod_tile
# mount -t nfs4 -o proto=tcp,port=2049 orlop:/mod_tile /mnt/mod_tile/
echo "orlop:/export/mod_tile /mnt/mod_tile   nfs4    proto=tcp,port=2049,_netdev,auto    0       0" >>/etc/fstab
cd /usr/share
rsync -avrP orlop:/usr/share/mapnik-osm-data .
ln -s /mnt/data/postgresql/ postgresql
ln -s /mnt/mod_tile/ /var/lib/mod_tile
/etc/init.d/

./render_list -r -z 14 -Z 14 -a -n 4 -l 15 -s /var/run/renderd/renderd.sock


----
1/21/13 - OpenStreetMap Tile Disk Usage:

Disk usage roughly triples for each level

SIZE   LEVEL
 32K    0
 56K    1
124K    2
272K    3
1000K   4
  2.9M  5
  9.4M  6
 28M    7
 94M    8
280M    9
964M    10
 2.7G   11
 7.7G   12
25G     13
76G     14

----
2/6/2013 - ARM Debian chroot

GoFlex Satellite /proc/cpuinfo
Processor       : ARMv7 Processor rev 2 (v7l)
BogoMIPS        : 298.32
Features        : swp half thumb fastmult vfp edsp neon vfpv3 
CPU implementer : 0x41
CPU architecture: 7
CPU variant     : 0x3
CPU part        : 0xc08
CPU revision    : 2
Hardware        : OMAP3 EVM
Revision        : 0020


On another machine:
sudo debootstrap --foreign --verbose --arch armel stable ./chroot

tar cvzf chroot.tgz chroot/
Copy to Satellite
NOTE: the Satellite does not have a filesystem capable of handling symbolic
links so we cannot directly untar our chroot environment.  Must make a loopback
device instead.

cd /media/sda1/tmp
dd if=/dev/zero of=filesystem bs=1M count=2000
mke2fs filesystem
mkdir /mnt/chroot
mount -o loop filesystem /mnt/chroot
cd /mnt/chroot
tar xvzf chroot.tgz
. ./deb-chroot.sh
/debootstrap/debootstrap --second-stage

vi /etc/resolv.conf
Add 'nameserver 8.8.8.8'

echo 'deb http://ftp.de.debian.org/debian stable main' >/etc/apt/sources.list
apt-get update
apt-get upgrade
apt-get install vim python git rsync sudo screen links \
    nano mtr python-pip ipython telnet locales openssh-server \
    bzip2
dpkg-reconfigure locales
# apt-get install mediawiki mysql-server

----

Setting up virtualenv
sudo apt-get install virtualenvwrapper sqlite3 libxml2-dev libxslt1-dev
mkvirtualenv heritage
pip install flask flask-mako flask-babel whoosh flask-sqlalchemy sqlautocode lxml
edit sqlautocode/declarative.py if add error handling to _deferred_relationship import to try from sqlalchemy.ext.declarative.clsregistry import _deferred_relationship if second attempt fails.

----
OSM mod_tile compression - 3/18/13

mod_tile 8x8 meta as rendered by OSM by default:
32K     0
56K     1
124K    2
272K    3
1000K   4
2.9M    5
9.4M    6
28M     7
94M     8
280M    9
964M    10
2.7G    11
7.7G    12
25G     13
76G     14
35G     15

Total Size: 148 GB

time du -skh mod_tile
104 minutes!

Total number of files/dirs: 7,295,166


mod_tile converted to 64x64 meta with duplicate removal:

60K     0
84K     1
152K    2
300K    3
1004K   4
2.8M    5
8.9M    6
26M     7
85M     8
250M    9
840M    10
2.2G    11
5.7G    12
17G     13
42G     14
34G     15

Total Size: 101 GB

time du -skh mod_tile
17 seconds!

Total number of files/dirs: 108,000

----
